# You'll always want to set MONGO_INITDB_ROOT_USERNAME and MONGO_INITDB_ROOT_PASSWORD
# since the mongo Docker image uses them for its default database user and password.
export MONGO_INITDB_ROOT_USERNAME=root
export MONGO_INITDB_ROOT_PASSWORD=
export MONGO_URL=mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@localhost/admin

# Which environment is running? It should be "development" or "production".
#export NODE_ENV=production
export NODE_ENV=development

# Should Docker restart your containers if they go down in unexpected ways?
export DOCKER_RESTART_POLICY=no

# What health check test command do you want to run? In development, having it
# curl your web server will result in a lot of log spam, so setting it to
# /bin/true is an easy way to make the health check do basically nothing.
#export DOCKER_APP_HEALTHCHECK_TEST=curl localhost:1337/health
export DOCKER_APP_HEALTHCHECK_TEST=-v

# What ip:port should be published back to the Docker host for the app server?
# If you're using Docker Toolbox or a custom VM you can't use 127.0.0.1. This
# is being overwritten in dev to be compatible with more dev environments.
#
# If you have a port conflict because something else is using 1337 then you
# can either stop that process or change 1337 to be something else.
#
# Use the default in production to avoid having gunicorn directly accessible to
# the internet since it'll very likely be behind nginx or a load balancer.
#export PORT=127.0.0.1:1337
export PORT=1337

# Pino log levels
# - fatal
# - error
# - warn
# - info
# - debug
# - trace
export LOG_LEVEL=info

# Comma separated host allowed to recieve request from
#export ALLOWED_ORIGINS=localhost:3000,localhost:1234

# What CPU and memory constraints will be added to your services? When left at
# 0, they will happily use as much as needed.
#export DOCKER_MONGO_CPUS=0
#export DOCKER_MONGO_MEMORY=0
#export DOCKER_APP_CPUS=0
#export DOCKER_APP_MEMORY=0
